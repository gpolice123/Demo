一辆超级班车，承载能力无限！如图，班车经过的站点构成M列N行的网格(1<= M,N <=100)，

起点(1,1) 站点(2,1) ...  站点(M,1)
站点(1,2) 站点(2,2) ...  站点(M,2)
... ...
站点(1,N) 站点(2,N) ...  公司(M,N)

现已知每个站点需要乘车的员工数（每个站点都不超过10人，终点CMN=0）：

C11, C21, C31, ... CM1,
C12, C22, C32...   CM2,
... ...
C1N, C2N, C3N, ... CMN,

请问班车沿着网格从起点(1,1)出发到公司(M,N)，只能按图中站点向下或向右行驶, 一次最多能运送多少员工？
=======================================================
举例：
M=3， N=2
需要乘车的员工数C11 - CMN：
C11=5，C21=2，C31=4
C12=1，C22=6，C32=0
则行驶路线为(1,1)->(2,1)->(2,2)->(3,2), 一次最多运送5+2+6=13名员工

=======================================================
参数范围：
1 <= M, N <= 100
0 <= C11~CMN <= 10
=======================================================
请实现Python函数 solution(passenger_num)，其中： 
passenger_num：是N x M的列表。
如passenger_num = [[5, 2, 4], [1, 6, 0]] 表示C11, C21, C31，C12, C22, C32 = 5, 2, 4, 1, 6, 0
返回值：最多可运送员工数，如13
=======================================================
import datetime

#data=[[6, 8, 10, 6, 5, 7, 6, 4, 1, 10],[5, 0, 2, 6, 10, 7, 1, 8, 0, 8],[6, 8, 4, 10, 8, 6, 2, 3, 6, 9],[6, 7, 5, 1, 4, 2, 8, 10, 3, 3],[10, 8, 10, 1, 0, 10, 5, 8, 10, 0]]

time_stamp = datetime.datetime.now()
print "time_stamp       " + time_stamp.strftime('%Y.%m.%d-%H:%M:%S')


m=len(data)
n=len(data[0])


path = [[0 for i in range(n)] for i in range(m)]

path[0][0] = data[0][0]

for i in range(1,m):
    path[i][0] = path[i-1][0] + data[i][0]
for j in range(1,n):
    path[0][j] = path[0][j-1] + data[0][j]
for i in range(1,m):
    for j in range(1,n):
        path[i][j] = max((path[i-1][j] + data[i][j]), (path[i][j-1] + data[i][j]))

time_stamp = datetime.datetime.now()
print "time_stamp       " + time_stamp.strftime('%Y.%m.%d-%H:%M:%S')

print path[-1][-1]

