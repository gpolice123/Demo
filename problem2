有多条云测试线，编号为1，2，3，...，testline_num。有多个工程师，编号为1，2，3，...，user_num。每名工程师需要在同一时间分别使用其中一条测试线（1 <= user_num <= testline_num）,每条测试线只能分配给一个用户。每个工程师能申请到的测试线是有限制的，例如工程师1：可申请1、3、4、6、7；工程师2：可申请2、3、4、8、9，15。要让每名工程师都能分配到一条合适的测试线，请计算有多少种分法？
========================================================
数据范围：
user_num <= testline_num
1 <= user_num <= 10
1 <= testline_num <= 20
========================================================
Python 实现：
请实现以下函数solution(testline_num, user_num, user_testline), 其中：

* testline_num为测试线条数
* user_num为工程师总数
* user_testline为每个工程师能申请到的测试线号，
例如：user_testline = [[1, 3, 4, 5], [2, 3, 5, 7, 8], ...]，表示工程师1可申请的测试线为：1, 3, 4, 5；工程师2可申请的测试线为：2, 3, 5, 7, 8。
* 返回可分配的方案总数
========================================================提交版
import itertools
import datetime

testline_num = 20
user_num = 10
#user_testline=[[1,5,6,8,9],[1,6,8],[2,8,9],[1,5,7,8,9],[1,2,4,6,7,8],[1,3,4,7,8,9], [1,2,4,6,7,8,11, 13, 16, 19, 20],[1,2,4,6,7,8,11, 15, 16, 19, 20], [1,2,4,6,7,8,11, 13, 17, 19, 20],[1,2,4,6,7,8,11, 13, 16, 19, 20]]
solution = []
print len(user_testline)

time_stamp = datetime.datetime.now()
print "time_stamp       " + time_stamp.strftime('%Y.%m.%d-%H:%M:%S')

for i in itertools.product(*user_testline):
    solution.append(list(i))

for i in solution[:]:
    if len(set(i)) < len(i):
        solution.remove(i)

time_stamp = datetime.datetime.now()
print "time_stamp       " + time_stamp.strftime('%Y.%m.%d-%H:%M:%S')
print len(solution)

========================================================优化版
import itertools
import datetime
testline_num = 5
user_num = 2
#user_testline=[[1,5,6,8,9],[1,6,8],[2,8,9],[1,5,7,8,9],[1,2,4,6,7,8],[1,3,4,7,8,9], [1,2,4,6,7,8,11, 13, 16, 19, 20],[1,2,4,6,7,8,11, 15, 16, 19, 20], [1,2,4,6,7,8,11, 13, 17, 19, 20],[1,2,4,6,7,8,11, 13, 16, 19, 20]]

user_testline_len = len(user_testline)
solution_count=0

time_stamp = datetime.datetime.now()
print "time_stamp       " + time_stamp.strftime('%Y.%m.%d-%H:%M:%S')

for i in itertools.product(*user_testline):
    if len(set(i)) >= user_testline_len:
        solution_count=solution_count+1

time_stamp = datetime.datetime.now()
print "time_stamp       " + time_stamp.strftime('%Y.%m.%d-%H:%M:%S')

print solution_count

>>> 第7组数据，使用优化后的程序
time_stamp       2018.07.05-10:14:47
time_stamp       2018.07.05-10:14:47
3797
>>> ================================ RESTART ================================
>>> 第7组数据，没有优化，都是列表
time_stamp       2018.07.05-10:21:14
time_stamp       2018.07.05-10:21:32
3797
